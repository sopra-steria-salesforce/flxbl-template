#TODO: Slack Integration
name: '[Push] Create Package'
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'global/**'
  workflow_dispatch:
    inputs:
      skip_version_bump:
        description: 'Set to false to bump package versions before building the new packages'
        required: true
        default: 'true'


#Set the environment variables for tracking metrics
#env:
  #SFPOWERSCRIPTS_NEWRELIC: 'true'
  #SFPOWERSCRIPTS_NEWRELIC_API_KEY: '${{ secrets.NEWRELIC_INSIGHT_INSERT_KEYS }}'
  #SFPOWERSCRIPTS_DATADOG: 'true'
  #SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  #SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'

jobs:

  bump_versions:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Bump Package Versions & Dependencies
        run: python .github/scripts/python/incrementPackageAndDependencyVersions.py

      - name: Push Changes to Main
        if: github.event.inputs.skip_version_bump=='false' || github.event_name == 'push'
        run: git push origin HEAD

  quickbuild:
    name: 'Quickbuild packages'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    needs: bump_versions
    if: needs.bump_versions.result == 'success' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.PROD_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a devhub

      - name: 'Create packages'
        run: sfp quickbuild -v devhub --branch main --diffcheck --buildnumber ${GITHUB_RUN_ID} -f config/project-scratch-def.json

      # Publish artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: quickbuild-artifacts
          path: artifacts

  deploy-to-sit:
    name: 'Deploy to SIT'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    needs: quickbuild
    if: github.ref == 'refs/heads/main'
    environment:
      name: SIT
    concurrency: sit
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
             name: quickbuild-artifacts
             path: artifacts

      - name: Authenticate to SIT sandbox
        run: |
          echo "${{ secrets.SIT_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a sit

      - name: 'Deploy to SIT'
        run: sfp install -u sit --skipifalreadyinstalled -g "##[group],##[endgroup]" --loglevel trace

      # TODO: Implement subflow to catch & publish deployment errors
      - name: 'Deploy Env Specific Alias Post to SIT'
        run: sf project deploy start -o sit -d global/src-env-specific-alias-post/sit -c --async

# TODO: Implement Integration Tests (here or in Validate Pipeline using Kubernetes, etc.)

  deploy-to-preprod:
    name: 'Deploy to PREPROD'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    needs: quickbuild
    if: github.ref == 'refs/heads/main'
    environment:
      name: PREPROD
    concurrency: preprod
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: quickbuild-artifacts
          path: artifacts

      - name: Authenticate to PREPROD sandbox
        run: |
          echo "${{ secrets.PREPROD_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a preprod

      - name: 'Deploy to PREPROD'
        run: sfp install -u preprod --skipifalreadyinstalled -g "##[group],##[endgroup]" --loglevel trace

      - name: 'Deploy Env Specific Alias Post to PREPROD'
        run: sf project deploy start -o preprod -d global/src-env-specific-alias-post/preprod -c --async



  buildAndPublish:
    name: 'Build and Publish'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    needs: [deploy-to-sit, deploy-to-preprod]
    concurrency: build 
    if: github.ref == 'refs/heads/main' || 'refs/heads/release/*'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.PROD_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url -f authfile -a prod

      - name: 'Create packages'
        run: |
          sfp build -v prod --branch main --diffcheck --buildnumber ${GITHUB_RUN_ID} -f config/project-scratch-def.json --executorcount=8

      # Publish artifacts
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: artifacts

      # Authenticate to npm
      - uses: actions/setup-node@v4
        with:
         registry-url: 'https://npm.pkg.github.com'

      - name: Publish
        if: always()
        run: |
          sfp publish -d artifacts --npm --scope @${{ github.repository_owner }}  --gittag --pushgittag
        env:
         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}